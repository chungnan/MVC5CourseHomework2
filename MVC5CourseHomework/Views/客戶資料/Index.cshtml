@model IEnumerable<MVC5CourseHomework.Models.客戶資料>
@using X.PagedList;
@using X.PagedList.Mvc;

@{
    ViewBag.Title = "客戶資料列表";
}

<h2>客戶資料列表</h2>

@using (Html.BeginForm("Search", "客戶資料", FormMethod.Get))
{
    <div class="form-inline">
        @Html.TextBox("custName", null, new { @class = "form-control", placeholder = "請輸入客戶名稱" })
        @Html.TextBox("custUid", null, new { @class = "form-control", placeholder = "請輸入統一編號" })
        @Html.TextBox("custTel", null, new { @class = "form-control", placeholder = "請輸入電話號碼" })
        @Html.TextBox("custFax", null, new { @class = "form-control", placeholder = "請輸入傳真號碼" })
        @Html.DropDownList("custCategory", null, "-- 請選擇客戶分類 --", htmlAttributes: new { @class = "form-control" })
        <button type="submit" class="btn btn-primary" name="submit" value="Search">Search</button>
        <button type="submit" class="btn btn-default" name="submit" value="Export">Export</button>
    </div>
}
<br />
<p class="text-right">
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
</p>

<p class="text-right">
    @Html.ActionLink("DB View 客戶對應聯絡人及銀行帳戶數", "DbViewList")
    <br />
    @Html.ActionLink("ViewModel 客戶對應聯絡人及銀行帳戶數", "ViewModelList")
</p>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("客戶名稱", "Index", new { sortColumn = ViewBag.客戶名稱 })
        </th>
        <th>
            @Html.ActionLink("統一編號", "Index", new { sortColumn = ViewBag.統一編號 })
        </th>
        <th>
            @Html.ActionLink("電話", "Index", new { sortColumn = ViewBag.電話 })
        </th>
        <th>
            @Html.ActionLink("傳真", "Index", new { sortColumn = ViewBag.傳真 })
        </th>
        <th>
            @Html.ActionLink("地址", "Index", new { sortColumn = ViewBag.地址 })
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new { sortColumn = ViewBag.Email })
        </th>
        <th>
            @Html.ActionLink("客戶分類", "Index", new { sortColumn = ViewBag.客戶分類 })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.客戶名稱)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.統一編號)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.電話)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.傳真)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.地址)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.客戶分類)
            </td>
            <td>
                <a href="javascript:void(0)" onclick="GetCount(@item.Id)">Count</a> |
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary" }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-warning" })
            </td>
        </tr>
    }

</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { sortColumn = @ViewBag.Sort, page = page }))

<script>
    function GetCount(id) {
        $.ajax({
            url: '/客戶資料/GetCount',
            type: "GET",
            dataType: 'json',
            data: { Id: id },
            success: function (data) {
                if (data) {
                    alert('聯絡人數量：' + data[0].聯絡人數量 + '，銀行帳戶數量：' + data[0].銀行帳戶數量);
                }
                else {
                    alert('error');
                }
            }
        });
    }
</script>